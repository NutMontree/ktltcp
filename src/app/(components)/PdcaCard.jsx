"use client";

import DeletePdca from "./DeletePdca";
import Link from "next/link";
// ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô (‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ß‡πà‡∏≤‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ä‡πâ Heroicons ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏∑‡πà‡∏ô ‡πÜ ‡πÅ‡∏ï‡πà‡πÉ‡∏ô‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ Emoji ‡πÅ‡∏ó‡∏ô)

const PdcaCard = ({ pdca, editing = false, onEditChange }) => {
  function formatThaiDate(timestamp) {
    if (!timestamp) return "-";
    // ‡πÉ‡∏ä‡πâ 'short' ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á/‡∏ô‡∏≤‡∏ó‡∏µ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏°‡πà‡∏¢‡∏≤‡∏ß‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ
    const options = {
      year: "numeric",
      month: "long",
      day: "2-digit",
      hour: "2-digit",
      minute: "2-digit",
    };
    return new Date(timestamp).toLocaleString("th-TH", options);
  }

  const createdDateTime = formatThaiDate(pdca.createdAt);

  return (
    // üé® Container ‡∏´‡∏•‡∏±‡∏Å: ‡∏î‡∏π‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏á‡∏≤‡πÅ‡∏•‡∏∞‡∏Ç‡∏≠‡∏ö‡∏°‡∏ô
    <div className="relative rounded-xl bg-white p-6 shadow-xl transition-all duration-300 hover:shadow-2xl dark:bg-gray-800">
      {/* üåü Action buttons - ‡∏à‡∏±‡∏î‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÉ‡∏´‡πâ‡∏°‡∏≠‡∏á‡πÄ‡∏´‡πá‡∏ô‡∏á‡πà‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏ó‡∏±‡∏ô‡∏™‡∏°‡∏±‡∏¢ */}
      <div className="absolute right-4 top-4 flex gap-2">
        <Link
          href={`/PdcaPage/${pdca._id}`}
          // ‡πÉ‡∏ä‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏™‡πÑ‡∏ï‡∏•‡πå‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô/‡∏•‡∏¥‡∏á‡∏Å‡πå
          className="rounded-full bg-blue-100 p-2 text-blue-600 transition hover:bg-blue-200 dark:bg-blue-900 dark:text-blue-300"
          title="‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç"
        >
          <span className="text-lg">‚öôÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</span>
        </Link>
        <DeletePdca id={pdca._id} />{" "}
        {/* ‡∏≠‡∏¢‡πà‡∏≤‡∏•‡∏∑‡∏°‡∏õ‡∏£‡∏±‡∏ö DeletePdca ‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ö‡∏ò‡∏µ‡∏°‡∏ô‡∏µ‡πâ‡∏î‡πâ‡∏ß‡∏¢ */}
      </div>

      {/* ‚≠êÔ∏è Header - ‡πÄ‡∏ô‡πâ‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô */}
      <div className="mb-4 pr-16 pt-4">
        <h2 className="line-clamp-2 text-xl font-bold text-gray-900 dark:text-white">
          {pdca.nameproject}
        </h2>
        <p className="mt-1 text-sm font-medium text-purple-600 dark:text-purple-400">
          üìÅ ‡∏á‡∏≤‡∏ô: {pdca.namework}
        </p>
      </div>

      <hr className="my-4 border-gray-100 dark:border-gray-700" />

      {/* üè∑Ô∏è Tags & Info - ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏à‡∏±‡∏î‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÅ‡∏ñ‡∏ß‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô */}
      <div className="mb-4 flex flex-wrap items-center gap-2">
        {/* Tag ‡∏õ‡∏µ‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì - ‡πÉ‡∏ä‡πâ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏∑‡πà‡∏≠‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à/‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì */}
        <span className="rounded-full bg-green-100 px-3 py-1 text-xs font-semibold text-green-800 dark:bg-green-900 dark:text-green-300">
          üóìÔ∏è ‡∏õ‡∏µ: {pdca.year}
        </span>
        {/* Tag ‡πÅ‡∏ú‡∏ô‡∏Å/‡∏ù‡πà‡∏≤‡∏¢ */}
        <span className="rounded-full bg-gray-100 px-3 py-1 text-xs font-semibold text-gray-700 dark:bg-gray-700 dark:text-gray-300">
          üè¢ ‡∏ù‡πà‡∏≤‡∏¢: {pdca.department || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"}
        </span>
      </div>

      {/* üìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ID / ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤ */}
      <div className="mt-4 space-y-2">
        <p className="text-md font-semibold text-gray-800 dark:text-gray-200">
          üìä ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤ (PDCA Items):
        </p>

        {/* Grid ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ 20 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ */}
        <div className="grid grid-cols-1 gap-3 rounded-lg border border-gray-200 bg-gray-50 p-3 px-6 py-6 dark:border-gray-600 dark:bg-gray-700 lg:grid-cols-2">
          {Array.from({ length: 20 }, (_, i) => {
            const key = `id${i + 1}`;
            const value = pdca[key];
            const isCompleted = !!value; // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô true/‡∏°‡∏µ‡∏Ñ‡πà‡∏≤

            if (editing && onEditChange) {
              // ‚úèÔ∏è ‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡πÅ‡∏™‡∏î‡∏á Checkbox
              return (
                <div key={key} className="flex items-center gap-1">
                  <input
                    type="checkbox"
                    checked={isCompleted}
                    onChange={(e) => onEditChange(key, e.target.checked)}
                    className="h-4 w-4 rounded text-blue-600 focus:ring-blue-500"
                  />
                  <label className="text-xs text-gray-700 dark:text-gray-300">
                    {key.toUpperCase()}
                  </label>
                </div>
              );
            }

            // üëÅÔ∏è ‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•: ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô
            return (
              <div key={key} className="pt-1">
                {value}
              </div>
            );
          })}
        </div>

        {/* ‚ùå ‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏î‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏¥‡∏° (‡∏ñ‡∏π‡∏Å‡∏ã‡πà‡∏≠‡∏ô‡πÉ‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î‡πÉ‡∏´‡∏°‡πà ‡πÅ‡∏ï‡πà‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ‡∏´‡∏≤‡∏Å‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°) */}
        {/* {!editing && Array.from({ length: 20 }, (_, i) => {
            const key = `id${i + 1}`;
            return pdca[key] ? (
              <div key={key} className="pt-1 text-sm text-gray-700">
                {pdca[key]} 
              </div>
            ) : null;
        })} 
        */}
      </div>

      {/* üïí Footer - ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà/‡πÄ‡∏ß‡∏•‡∏≤ */}
      <div className="mt-6 border-t border-gray-100 pt-3 text-right text-xs text-gray-500 dark:border-gray-700 dark:text-gray-400">
        <p>‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠: **{createdDateTime}**</p>
      </div>
    </div>
  );
};

export default PdcaCard;
